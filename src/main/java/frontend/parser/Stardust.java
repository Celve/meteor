package frontend.parser;
// Generated from java-escape by ANTLR 4.11.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class Stardust extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Add=1, Sub=2, Mul=3, Div=4, Mod=5, Greater=6, Less=7, GreaterEqual=8, 
		LessEqual=9, Equal=10, NotEqual=11, LogicalAnd=12, LogicalOr=13, LogicalNot=14, 
		RightShift=15, LeftShift=16, BitwiseAnd=17, BitwiseOr=18, BitwiseXor=19, 
		BitwiseNot=20, Assign=21, Increment=22, Decrement=23, LeftBracket=24, 
		RightBracket=25, LeftParen=26, RightParen=27, LeftBrace=28, RightBrace=29, 
		LineComment=30, BlockComment=31, Void=32, Bool=33, Int=34, String=35, 
		New=36, Class=37, Null=38, True=39, False=40, This=41, If=42, Else=43, 
		For=44, While=45, Break=46, Continue=47, Return=48, IntegerLiteral=49, 
		StringLiteral=50, Escape=51, WhiteSpace=52, NewLine=53, Access=54, Comma=55, 
		Id=56;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"Add", "Sub", "Mul", "Div", "Mod", "Greater", "Less", "GreaterEqual", 
			"LessEqual", "Equal", "NotEqual", "LogicalAnd", "LogicalOr", "LogicalNot", 
			"RightShift", "LeftShift", "BitwiseAnd", "BitwiseOr", "BitwiseXor", "BitwiseNot", 
			"Assign", "Increment", "Decrement", "LeftBracket", "RightBracket", "LeftParen", 
			"RightParen", "LeftBrace", "RightBrace", "LineComment", "BlockComment", 
			"Void", "Bool", "Int", "String", "New", "Class", "Null", "True", "False", 
			"This", "If", "Else", "For", "While", "Break", "Continue", "Return", 
			"IntegerLiteral", "StringLiteral", "Escape", "WhiteSpace", "NewLine", 
			"Access", "Comma", "Id"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'+'", "'-'", "'*'", "'/'", "'%'", "'>'", "'<'", "'>='", "'<='", 
			"'=='", "'!='", "'&&'", "'||'", "'!'", "'>>'", "'<<'", "'&'", "'|'", 
			"'^'", "'~'", "'='", "'++'", "'--'", "'['", "']'", "'('", "')'", "'{'", 
			"'}'", null, null, "'void'", "'bool'", "'int'", "'string'", "'new'", 
			"'class'", "'null'", "'true'", "'false'", "'this'", "'if'", "'else'", 
			"'for'", "'while'", "'break'", "'continue'", "'return'", null, null, 
			null, null, null, "'.'", "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "Add", "Sub", "Mul", "Div", "Mod", "Greater", "Less", "GreaterEqual", 
			"LessEqual", "Equal", "NotEqual", "LogicalAnd", "LogicalOr", "LogicalNot", 
			"RightShift", "LeftShift", "BitwiseAnd", "BitwiseOr", "BitwiseXor", "BitwiseNot", 
			"Assign", "Increment", "Decrement", "LeftBracket", "RightBracket", "LeftParen", 
			"RightParen", "LeftBrace", "RightBrace", "LineComment", "BlockComment", 
			"Void", "Bool", "Int", "String", "New", "Class", "Null", "True", "False", 
			"This", "If", "Else", "For", "While", "Break", "Continue", "Return", 
			"IntegerLiteral", "StringLiteral", "Escape", "WhiteSpace", "NewLine", 
			"Access", "Comma", "Id"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public Stardust(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Stardust.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u00008\u0164\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u00024\u00074\u00025\u0007"+
		"5\u00026\u00076\u00027\u00077\u0001\u0000\u0001\u0000\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001"+
		"\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f"+
		"\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011"+
		"\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016"+
		"\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019"+
		"\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c"+
		"\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0005\u001d\u00ba\b\u001d"+
		"\n\u001d\f\u001d\u00bd\t\u001d\u0001\u001d\u0003\u001d\u00c0\b\u001d\u0001"+
		"\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001"+
		"\u001e\u0001\u001e\u0005\u001e\u00ca\b\u001e\n\u001e\f\u001e\u00cd\t\u001e"+
		"\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f"+
		"\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 "+
		"\u0001 \u0001 \u0001!\u0001!\u0001!\u0001!\u0001\"\u0001\"\u0001\"\u0001"+
		"\"\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001#\u0001#\u0001$\u0001$\u0001"+
		"$\u0001$\u0001$\u0001$\u0001%\u0001%\u0001%\u0001%\u0001%\u0001&\u0001"+
		"&\u0001&\u0001&\u0001&\u0001\'\u0001\'\u0001\'\u0001\'\u0001\'\u0001\'"+
		"\u0001(\u0001(\u0001(\u0001(\u0001(\u0001)\u0001)\u0001)\u0001*\u0001"+
		"*\u0001*\u0001*\u0001*\u0001+\u0001+\u0001+\u0001+\u0001,\u0001,\u0001"+
		",\u0001,\u0001,\u0001,\u0001-\u0001-\u0001-\u0001-\u0001-\u0001-\u0001"+
		".\u0001.\u0001.\u0001.\u0001.\u0001.\u0001.\u0001.\u0001.\u0001/\u0001"+
		"/\u0001/\u0001/\u0001/\u0001/\u0001/\u00010\u00010\u00010\u00050\u0133"+
		"\b0\n0\f0\u0136\t0\u00030\u0138\b0\u00011\u00011\u00011\u00051\u013d\b"+
		"1\n1\f1\u0140\t1\u00011\u00011\u00012\u00012\u00012\u00012\u00012\u0001"+
		"2\u00032\u014a\b2\u00013\u00043\u014d\b3\u000b3\f3\u014e\u00013\u0001"+
		"3\u00014\u00014\u00014\u00034\u0156\b4\u00014\u00014\u00015\u00015\u0001"+
		"6\u00016\u00017\u00017\u00057\u0160\b7\n7\f7\u0163\t7\u0003\u00bb\u00cb"+
		"\u013e\u00008\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005"+
		"\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019"+
		"\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015"+
		"+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f"+
		"? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/_0a1c2e3g4i5k6m7o8\u0001\u0000\u0006"+
		"\u0001\u000019\u0001\u000009\u0002\u0000\t\t  \u0002\u0000\n\n\r\r\u0002"+
		"\u0000AZaz\u0004\u000009AZ__az\u016f\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000"+
		"\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000"+
		"I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001"+
		"\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000"+
		"\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0000"+
		"W\u0001\u0000\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000[\u0001"+
		"\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000_\u0001\u0000\u0000"+
		"\u0000\u0000a\u0001\u0000\u0000\u0000\u0000c\u0001\u0000\u0000\u0000\u0000"+
		"e\u0001\u0000\u0000\u0000\u0000g\u0001\u0000\u0000\u0000\u0000i\u0001"+
		"\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0000\u0000m\u0001\u0000\u0000"+
		"\u0000\u0000o\u0001\u0000\u0000\u0000\u0001q\u0001\u0000\u0000\u0000\u0003"+
		"s\u0001\u0000\u0000\u0000\u0005u\u0001\u0000\u0000\u0000\u0007w\u0001"+
		"\u0000\u0000\u0000\ty\u0001\u0000\u0000\u0000\u000b{\u0001\u0000\u0000"+
		"\u0000\r}\u0001\u0000\u0000\u0000\u000f\u007f\u0001\u0000\u0000\u0000"+
		"\u0011\u0082\u0001\u0000\u0000\u0000\u0013\u0085\u0001\u0000\u0000\u0000"+
		"\u0015\u0088\u0001\u0000\u0000\u0000\u0017\u008b\u0001\u0000\u0000\u0000"+
		"\u0019\u008e\u0001\u0000\u0000\u0000\u001b\u0091\u0001\u0000\u0000\u0000"+
		"\u001d\u0093\u0001\u0000\u0000\u0000\u001f\u0096\u0001\u0000\u0000\u0000"+
		"!\u0099\u0001\u0000\u0000\u0000#\u009b\u0001\u0000\u0000\u0000%\u009d"+
		"\u0001\u0000\u0000\u0000\'\u009f\u0001\u0000\u0000\u0000)\u00a1\u0001"+
		"\u0000\u0000\u0000+\u00a3\u0001\u0000\u0000\u0000-\u00a6\u0001\u0000\u0000"+
		"\u0000/\u00a9\u0001\u0000\u0000\u00001\u00ab\u0001\u0000\u0000\u00003"+
		"\u00ad\u0001\u0000\u0000\u00005\u00af\u0001\u0000\u0000\u00007\u00b1\u0001"+
		"\u0000\u0000\u00009\u00b3\u0001\u0000\u0000\u0000;\u00b5\u0001\u0000\u0000"+
		"\u0000=\u00c5\u0001\u0000\u0000\u0000?\u00d3\u0001\u0000\u0000\u0000A"+
		"\u00d8\u0001\u0000\u0000\u0000C\u00dd\u0001\u0000\u0000\u0000E\u00e1\u0001"+
		"\u0000\u0000\u0000G\u00e8\u0001\u0000\u0000\u0000I\u00ec\u0001\u0000\u0000"+
		"\u0000K\u00f2\u0001\u0000\u0000\u0000M\u00f7\u0001\u0000\u0000\u0000O"+
		"\u00fc\u0001\u0000\u0000\u0000Q\u0102\u0001\u0000\u0000\u0000S\u0107\u0001"+
		"\u0000\u0000\u0000U\u010a\u0001\u0000\u0000\u0000W\u010f\u0001\u0000\u0000"+
		"\u0000Y\u0113\u0001\u0000\u0000\u0000[\u0119\u0001\u0000\u0000\u0000]"+
		"\u011f\u0001\u0000\u0000\u0000_\u0128\u0001\u0000\u0000\u0000a\u0137\u0001"+
		"\u0000\u0000\u0000c\u0139\u0001\u0000\u0000\u0000e\u0149\u0001\u0000\u0000"+
		"\u0000g\u014c\u0001\u0000\u0000\u0000i\u0155\u0001\u0000\u0000\u0000k"+
		"\u0159\u0001\u0000\u0000\u0000m\u015b\u0001\u0000\u0000\u0000o\u015d\u0001"+
		"\u0000\u0000\u0000qr\u0005+\u0000\u0000r\u0002\u0001\u0000\u0000\u0000"+
		"st\u0005-\u0000\u0000t\u0004\u0001\u0000\u0000\u0000uv\u0005*\u0000\u0000"+
		"v\u0006\u0001\u0000\u0000\u0000wx\u0005/\u0000\u0000x\b\u0001\u0000\u0000"+
		"\u0000yz\u0005%\u0000\u0000z\n\u0001\u0000\u0000\u0000{|\u0005>\u0000"+
		"\u0000|\f\u0001\u0000\u0000\u0000}~\u0005<\u0000\u0000~\u000e\u0001\u0000"+
		"\u0000\u0000\u007f\u0080\u0005>\u0000\u0000\u0080\u0081\u0005=\u0000\u0000"+
		"\u0081\u0010\u0001\u0000\u0000\u0000\u0082\u0083\u0005<\u0000\u0000\u0083"+
		"\u0084\u0005=\u0000\u0000\u0084\u0012\u0001\u0000\u0000\u0000\u0085\u0086"+
		"\u0005=\u0000\u0000\u0086\u0087\u0005=\u0000\u0000\u0087\u0014\u0001\u0000"+
		"\u0000\u0000\u0088\u0089\u0005!\u0000\u0000\u0089\u008a\u0005=\u0000\u0000"+
		"\u008a\u0016\u0001\u0000\u0000\u0000\u008b\u008c\u0005&\u0000\u0000\u008c"+
		"\u008d\u0005&\u0000\u0000\u008d\u0018\u0001\u0000\u0000\u0000\u008e\u008f"+
		"\u0005|\u0000\u0000\u008f\u0090\u0005|\u0000\u0000\u0090\u001a\u0001\u0000"+
		"\u0000\u0000\u0091\u0092\u0005!\u0000\u0000\u0092\u001c\u0001\u0000\u0000"+
		"\u0000\u0093\u0094\u0005>\u0000\u0000\u0094\u0095\u0005>\u0000\u0000\u0095"+
		"\u001e\u0001\u0000\u0000\u0000\u0096\u0097\u0005<\u0000\u0000\u0097\u0098"+
		"\u0005<\u0000\u0000\u0098 \u0001\u0000\u0000\u0000\u0099\u009a\u0005&"+
		"\u0000\u0000\u009a\"\u0001\u0000\u0000\u0000\u009b\u009c\u0005|\u0000"+
		"\u0000\u009c$\u0001\u0000\u0000\u0000\u009d\u009e\u0005^\u0000\u0000\u009e"+
		"&\u0001\u0000\u0000\u0000\u009f\u00a0\u0005~\u0000\u0000\u00a0(\u0001"+
		"\u0000\u0000\u0000\u00a1\u00a2\u0005=\u0000\u0000\u00a2*\u0001\u0000\u0000"+
		"\u0000\u00a3\u00a4\u0005+\u0000\u0000\u00a4\u00a5\u0005+\u0000\u0000\u00a5"+
		",\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005-\u0000\u0000\u00a7\u00a8\u0005"+
		"-\u0000\u0000\u00a8.\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005[\u0000"+
		"\u0000\u00aa0\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005]\u0000\u0000\u00ac"+
		"2\u0001\u0000\u0000\u0000\u00ad\u00ae\u0005(\u0000\u0000\u00ae4\u0001"+
		"\u0000\u0000\u0000\u00af\u00b0\u0005)\u0000\u0000\u00b06\u0001\u0000\u0000"+
		"\u0000\u00b1\u00b2\u0005{\u0000\u0000\u00b28\u0001\u0000\u0000\u0000\u00b3"+
		"\u00b4\u0005}\u0000\u0000\u00b4:\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005"+
		"/\u0000\u0000\u00b6\u00b7\u0005/\u0000\u0000\u00b7\u00bb\u0001\u0000\u0000"+
		"\u0000\u00b8\u00ba\t\u0000\u0000\u0000\u00b9\u00b8\u0001\u0000\u0000\u0000"+
		"\u00ba\u00bd\u0001\u0000\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000"+
		"\u00bb\u00b9\u0001\u0000\u0000\u0000\u00bc\u00bf\u0001\u0000\u0000\u0000"+
		"\u00bd\u00bb\u0001\u0000\u0000\u0000\u00be\u00c0\u0005\r\u0000\u0000\u00bf"+
		"\u00be\u0001\u0000\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00c0"+
		"\u00c1\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005\n\u0000\u0000\u00c2\u00c3"+
		"\u0001\u0000\u0000\u0000\u00c3\u00c4\u0006\u001d\u0000\u0000\u00c4<\u0001"+
		"\u0000\u0000\u0000\u00c5\u00c6\u0005/\u0000\u0000\u00c6\u00c7\u0005*\u0000"+
		"\u0000\u00c7\u00cb\u0001\u0000\u0000\u0000\u00c8\u00ca\t\u0000\u0000\u0000"+
		"\u00c9\u00c8\u0001\u0000\u0000\u0000\u00ca\u00cd\u0001\u0000\u0000\u0000"+
		"\u00cb\u00cc\u0001\u0000\u0000\u0000\u00cb\u00c9\u0001\u0000\u0000\u0000"+
		"\u00cc\u00ce\u0001\u0000\u0000\u0000\u00cd\u00cb\u0001\u0000\u0000\u0000"+
		"\u00ce\u00cf\u0005*\u0000\u0000\u00cf\u00d0\u0005/\u0000\u0000\u00d0\u00d1"+
		"\u0001\u0000\u0000\u0000\u00d1\u00d2\u0006\u001e\u0000\u0000\u00d2>\u0001"+
		"\u0000\u0000\u0000\u00d3\u00d4\u0005v\u0000\u0000\u00d4\u00d5\u0005o\u0000"+
		"\u0000\u00d5\u00d6\u0005i\u0000\u0000\u00d6\u00d7\u0005d\u0000\u0000\u00d7"+
		"@\u0001\u0000\u0000\u0000\u00d8\u00d9\u0005b\u0000\u0000\u00d9\u00da\u0005"+
		"o\u0000\u0000\u00da\u00db\u0005o\u0000\u0000\u00db\u00dc\u0005l\u0000"+
		"\u0000\u00dcB\u0001\u0000\u0000\u0000\u00dd\u00de\u0005i\u0000\u0000\u00de"+
		"\u00df\u0005n\u0000\u0000\u00df\u00e0\u0005t\u0000\u0000\u00e0D\u0001"+
		"\u0000\u0000\u0000\u00e1\u00e2\u0005s\u0000\u0000\u00e2\u00e3\u0005t\u0000"+
		"\u0000\u00e3\u00e4\u0005r\u0000\u0000\u00e4\u00e5\u0005i\u0000\u0000\u00e5"+
		"\u00e6\u0005n\u0000\u0000\u00e6\u00e7\u0005g\u0000\u0000\u00e7F\u0001"+
		"\u0000\u0000\u0000\u00e8\u00e9\u0005n\u0000\u0000\u00e9\u00ea\u0005e\u0000"+
		"\u0000\u00ea\u00eb\u0005w\u0000\u0000\u00ebH\u0001\u0000\u0000\u0000\u00ec"+
		"\u00ed\u0005c\u0000\u0000\u00ed\u00ee\u0005l\u0000\u0000\u00ee\u00ef\u0005"+
		"a\u0000\u0000\u00ef\u00f0\u0005s\u0000\u0000\u00f0\u00f1\u0005s\u0000"+
		"\u0000\u00f1J\u0001\u0000\u0000\u0000\u00f2\u00f3\u0005n\u0000\u0000\u00f3"+
		"\u00f4\u0005u\u0000\u0000\u00f4\u00f5\u0005l\u0000\u0000\u00f5\u00f6\u0005"+
		"l\u0000\u0000\u00f6L\u0001\u0000\u0000\u0000\u00f7\u00f8\u0005t\u0000"+
		"\u0000\u00f8\u00f9\u0005r\u0000\u0000\u00f9\u00fa\u0005u\u0000\u0000\u00fa"+
		"\u00fb\u0005e\u0000\u0000\u00fbN\u0001\u0000\u0000\u0000\u00fc\u00fd\u0005"+
		"f\u0000\u0000\u00fd\u00fe\u0005a\u0000\u0000\u00fe\u00ff\u0005l\u0000"+
		"\u0000\u00ff\u0100\u0005s\u0000\u0000\u0100\u0101\u0005e\u0000\u0000\u0101"+
		"P\u0001\u0000\u0000\u0000\u0102\u0103\u0005t\u0000\u0000\u0103\u0104\u0005"+
		"h\u0000\u0000\u0104\u0105\u0005i\u0000\u0000\u0105\u0106\u0005s\u0000"+
		"\u0000\u0106R\u0001\u0000\u0000\u0000\u0107\u0108\u0005i\u0000\u0000\u0108"+
		"\u0109\u0005f\u0000\u0000\u0109T\u0001\u0000\u0000\u0000\u010a\u010b\u0005"+
		"e\u0000\u0000\u010b\u010c\u0005l\u0000\u0000\u010c\u010d\u0005s\u0000"+
		"\u0000\u010d\u010e\u0005e\u0000\u0000\u010eV\u0001\u0000\u0000\u0000\u010f"+
		"\u0110\u0005f\u0000\u0000\u0110\u0111\u0005o\u0000\u0000\u0111\u0112\u0005"+
		"r\u0000\u0000\u0112X\u0001\u0000\u0000\u0000\u0113\u0114\u0005w\u0000"+
		"\u0000\u0114\u0115\u0005h\u0000\u0000\u0115\u0116\u0005i\u0000\u0000\u0116"+
		"\u0117\u0005l\u0000\u0000\u0117\u0118\u0005e\u0000\u0000\u0118Z\u0001"+
		"\u0000\u0000\u0000\u0119\u011a\u0005b\u0000\u0000\u011a\u011b\u0005r\u0000"+
		"\u0000\u011b\u011c\u0005e\u0000\u0000\u011c\u011d\u0005a\u0000\u0000\u011d"+
		"\u011e\u0005k\u0000\u0000\u011e\\\u0001\u0000\u0000\u0000\u011f\u0120"+
		"\u0005c\u0000\u0000\u0120\u0121\u0005o\u0000\u0000\u0121\u0122\u0005n"+
		"\u0000\u0000\u0122\u0123\u0005t\u0000\u0000\u0123\u0124\u0005i\u0000\u0000"+
		"\u0124\u0125\u0005n\u0000\u0000\u0125\u0126\u0005u\u0000\u0000\u0126\u0127"+
		"\u0005e\u0000\u0000\u0127^\u0001\u0000\u0000\u0000\u0128\u0129\u0005r"+
		"\u0000\u0000\u0129\u012a\u0005e\u0000\u0000\u012a\u012b\u0005t\u0000\u0000"+
		"\u012b\u012c\u0005u\u0000\u0000\u012c\u012d\u0005r\u0000\u0000\u012d\u012e"+
		"\u0005n\u0000\u0000\u012e`\u0001\u0000\u0000\u0000\u012f\u0138\u00050"+
		"\u0000\u0000\u0130\u0134\u0007\u0000\u0000\u0000\u0131\u0133\u0007\u0001"+
		"\u0000\u0000\u0132\u0131\u0001\u0000\u0000\u0000\u0133\u0136\u0001\u0000"+
		"\u0000\u0000\u0134\u0132\u0001\u0000\u0000\u0000\u0134\u0135\u0001\u0000"+
		"\u0000\u0000\u0135\u0138\u0001\u0000\u0000\u0000\u0136\u0134\u0001\u0000"+
		"\u0000\u0000\u0137\u012f\u0001\u0000\u0000\u0000\u0137\u0130\u0001\u0000"+
		"\u0000\u0000\u0138b\u0001\u0000\u0000\u0000\u0139\u013e\u0005\"\u0000"+
		"\u0000\u013a\u013d\u0003e2\u0000\u013b\u013d\t\u0000\u0000\u0000\u013c"+
		"\u013a\u0001\u0000\u0000\u0000\u013c\u013b\u0001\u0000\u0000\u0000\u013d"+
		"\u0140\u0001\u0000\u0000\u0000\u013e\u013f\u0001\u0000\u0000\u0000\u013e"+
		"\u013c\u0001\u0000\u0000\u0000\u013f\u0141\u0001\u0000\u0000\u0000\u0140"+
		"\u013e\u0001\u0000\u0000\u0000\u0141\u0142\u0005\"\u0000\u0000\u0142d"+
		"\u0001\u0000\u0000\u0000\u0143\u0144\u0005\\\u0000\u0000\u0144\u014a\u0005"+
		"\"\u0000\u0000\u0145\u0146\u0005\\\u0000\u0000\u0146\u014a\u0005\\\u0000"+
		"\u0000\u0147\u0148\u0005\\\u0000\u0000\u0148\u014a\u0005n\u0000\u0000"+
		"\u0149\u0143\u0001\u0000\u0000\u0000\u0149\u0145\u0001\u0000\u0000\u0000"+
		"\u0149\u0147\u0001\u0000\u0000\u0000\u014af\u0001\u0000\u0000\u0000\u014b"+
		"\u014d\u0007\u0002\u0000\u0000\u014c\u014b\u0001\u0000\u0000\u0000\u014d"+
		"\u014e\u0001\u0000\u0000\u0000\u014e\u014c\u0001\u0000\u0000\u0000\u014e"+
		"\u014f\u0001\u0000\u0000\u0000\u014f\u0150\u0001\u0000\u0000\u0000\u0150"+
		"\u0151\u00063\u0000\u0000\u0151h\u0001\u0000\u0000\u0000\u0152\u0153\u0005"+
		"\r\u0000\u0000\u0153\u0156\u0005\n\u0000\u0000\u0154\u0156\u0007\u0003"+
		"\u0000\u0000\u0155\u0152\u0001\u0000\u0000\u0000\u0155\u0154\u0001\u0000"+
		"\u0000\u0000\u0156\u0157\u0001\u0000\u0000\u0000\u0157\u0158\u00064\u0000"+
		"\u0000\u0158j\u0001\u0000\u0000\u0000\u0159\u015a\u0005.\u0000\u0000\u015a"+
		"l\u0001\u0000\u0000\u0000\u015b\u015c\u0005,\u0000\u0000\u015cn\u0001"+
		"\u0000\u0000\u0000\u015d\u0161\u0007\u0004\u0000\u0000\u015e\u0160\u0007"+
		"\u0005\u0000\u0000\u015f\u015e\u0001\u0000\u0000\u0000\u0160\u0163\u0001"+
		"\u0000\u0000\u0000\u0161\u015f\u0001\u0000\u0000\u0000\u0161\u0162\u0001"+
		"\u0000\u0000\u0000\u0162p\u0001\u0000\u0000\u0000\u0163\u0161\u0001\u0000"+
		"\u0000\u0000\f\u0000\u00bb\u00bf\u00cb\u0134\u0137\u013c\u013e\u0149\u014e"+
		"\u0155\u0161\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}
